syntax = "proto2";
option cc_enable_arenas = true;

import "blickfeld/options.proto";

package blickfeld.protocol.config;

/**
 * > Introduced in BSL v2.17 and firmware v1.18
 *
 * This section describes configuration of on-device algorithms.
 */
message Algorithm {
	/**
	 * > Introduced in firmware v1.16
	 *
	 * This message configures the background subtraction.
	 *
	 * The algorithm uses a configurable number of reference frames to estimate static points (background) in the scene.
	 * Once the number of reference frames are processed, it removes all static points from the point cloud output.
	 * The resulting point cloud then only contains the non-static points (foreground).
	 * Points that are a initially part of the foreground and but then stop moving, will be added to the background and
	 * thus disappear after a certain amount of time, which is given by the exponential decay rate parameter.
	 * Conversely, if an object that is already part of the background suddenly starts moving, it will be added to the foreground.
	 *
	 */
	message BackgroundSubtraction {
		reserved 3, 4;
		reserved "classification_threshold"; // Removed parameter to reduce complexity

		optional uint32 initialization_frames = 1 [default=10, (d_min) = 1, (d_max)=10]; // Number of frames to initialize the background with
		optional float exponential_decay_rate = 2 [default=0.0025, (d_min) = 0, (d_max) = 1]; // Controls how fast objects switch between foreground and background. Exponential decay factor.
	}

	/**
	 * > Introduced in firmware v1.18
	 *
	 * The neighbor filter is a simple noise filter, which uses neighboring returns in the scan pattern to decide if returns should be filtered.
	 *
	 * The algorithm iterates through all returns and removes all, which have zero neighbors.
	 * A neighbor return must be:
	 * - directly to the left / to the right / above / below the current return in the scan pattern
	 * - close to the current return. The maximum range, used for this condition, is defined by the angle spacing of the scan pattern and the range of the current return. As with higher distance, neighboring returns are expected to be further away.
	 *
	 * No parameters can be configured at the moment.
	 */
	message NeighborFilter {
	}

	/**
	 *
	 * > Introduced in firmware v1.18
	 *
	 * This message configures a static geometric transformation.
	 *
	 * The algorithm applies a static rotation and translation to the point cloud output.
	 *
	 * The rotation matrix **R** is expected to be a 3 x 3 matrix serialized in row major order.
	 *
	 * Rotation in matrix representation:
	 *
	 * |     |  R  |     |
	 * | --- | --- | --- |
	 * | r<sub>1,1</sub> | r<sub>1,2</sub> | r<sub>1,3</sub> |
	 * | r<sub>2,1</sub> | r<sub>2,2</sub> | r<sub>2,3</sub> |
	 * | r<sub>3,1</sub> | r<sub>3,2</sub> | r<sub>3,3</sub> |
	 *
	 * Rotation in serialized representation:
	 *
	 * **R** = [r<sub>1,1</sub>, r<sub>1,2</sub>, ... r<sub>3,2</sub>, r<sub>3,3</sub>]
	 *
	 * The translation vector **T** is expected to be a 3 x 1 vector.
	 *
	 * Translation in vector representation:
	 *
	 * |  T  |
	 * | --- |
	 * |  t<sub>1</sub>  |
	 * |  t<sub>2</sub>  |
	 * |  t<sub>3</sub>  |
	 *
	 * Translation in serialized representation:
	 *
	 * **T** = [t<sub>1</sub>, t<sub>2</sub>, t<sub>3</sub>] =  [x, y, z]
	 *
	 */
	message StaticTransformation {
		repeated float rotation_matrix = 1 [(length) = 9, (optional) = true, packed = true]; // rotation matrix **R** in serialized representation.
		repeated float translation_vector = 2 [(length) = 3, (optional) = true, packed = true]; // translation vector **T** in serialized representation.
	}

	oneof algo {
		BackgroundSubtraction background_subtraction = 1; // Refer to [BackgroundSubtraction](#blickfeld.protocol.config.Algorithm.BackgroundSubtraction)
		NeighborFilter neighbor_filter = 2; // Refer to [NeighborFilter](#blickfeld.protocol.config.Algorithm.NeighborFilter)
		StaticTransformation static_transformation = 3; // Refer to [StaticTransformation](#blickfeld.protocol.config.Algorithm.StaticTransformation)
	}
}
